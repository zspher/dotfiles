#! /bin/bash
### BEGIN INIT INFO
# Provides:          code-server
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:      code-server server 
### END INIT INFO

NAME="code-server"
DAEMON=/usr/bin/code-server
DAEMON_ARGS=""
RUNAS=montle # change username to your own

PIDFILE=/var/run/$NAME.pid
LOGFILE=/var/log/$NAME.log

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variable
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


#
# Function that starts the daemon/service
#

do_start() {
  # Return
  #   0 if daemon has been started
  #   1 if daemon was already running
  #   2 if daemon could not be started

  # find if pid file exists and has content and if pid process is killable
  if [ -f $PIDFILE ] && [ -s $PIDFILE ] && kill -0 "$(cat $PIDFILE)"; then
    return 1
  fi

  local CMD="$NAME $DAEMON_ARGS &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  # Try with this command line instead of above if not workable
  # su -s /bin/sh $RUNAS -c "$CMD" > "$PIDFILE"

  sleep 2
  # find if process does not exist
  if ! (pgrep -u $RUNAS -f $NAME > /dev/null); then
    return 2
  fi
}

#
# Function that stops the daemon/service
#

do_stop() {
  # Return
  #   0 if daemon has been stopped
  #   1 if daemon was already stopped
  #   2 if daemon could not be stopped
  #   other if a failure occurred

  # find if pid is present and if pid process is killable
  if [ ! -f "$PIDFILE" ] || ! kill -0 "$(cat "$PIDFILE")"; then
    return 1
  # if unable to remove pid and kill process
  elif ! (kill -15 "$(cat "$PIDFILE")" && rm -f "$PIDFILE"); then
    return 2
  fi
}

#
# Function that shows the daemon/service status
#

find_status() {
  # Return
  #   0 if daemon is running
  #   1 if daemon has been stopped but pidfile still exists
  #   3 if daemon has been stopped
  #   4 unable to determine status
  # ps. from /lib/lsb/init-functions pidofproc() 

  if [ -f $PIDFILE ] && [ -s $PIDFILE ]; then
    if [ -z "$(pgrep -xf $PIDFILE)" ]; then
      log_failure_msg "$NAME appears to be dead but pidfile still exists"
      return 1
    else    
      log_success_msg "$NAME is running"
      return 0
    fi
  else
    log_failure_msg "$NAME is not running"
    return 3
  fi
  return 4
}


case "$1" in
  start)
    log_daemon_msg "Starting service" "$NAME"
    do_start
    case "$?" in
      0|1) log_end_msg 0 ;;
      2) log_end_msg 1 ;;
    esac
    ;;
  stop)
    log_daemon_msg "Stopping service" "$NAME"
    do_stop
    case "$?" in
      0|1) log_end_msg 0 ;;
      2) log_end_msg 1 ;;
    esac
    ;;
  status)
    find_status && exit 0 || exit $? 
    ;;
  restart|force-reload)
    log_daemon_msg "Restarting service" "$NAME"
    do_stop
    case "$?" in
      0|1)
      do_start
      case "$?" in
        0) log_end_msg 0 ;;
        1) log_end_msg 1 ;; # Old process is still running
        *) log_end_msg 1 ;; # Failed to start
      esac
      ;;
      *)
      # Failed to stop
      log_end_msg 1
      ;;
    esac
    ;;
  *)
    echo "Usage: $NAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac
